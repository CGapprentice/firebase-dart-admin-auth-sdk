stages:
  - setup
  - unit_tests

# Setup Stage
setup:
  stage: setup
  image: dart:stable
  # tags:
  #   - dart
  rules:
    - if: $CI_COMMIT_REF_NAME != "main" && $CI_COMMIT_REF_NAME != "development" && $CI_COMMIT_REF_NAME != "qa" && $GITLAB_USER_LOGIN != "alphabetacreatives"
      when: always
    - when: never
  script:
    - echo "Setting up environment..."
    - cd firebase-dart-admin-auth-sdk/firebase-dart-admin-auth-sdk
    - dart pub get
    - dart analyze > analysis_report.txt

    # Filter analysis output for missing documentation warnings, excluding test/unit files
    - echo "Filtering for documentation issues..."
    - grep -E "Missing documentation for a public member" analysis_report.txt | grep -vE "^test/unit" > filtered_report.txt

    # Check for responsible developers
    - echo "Checking for responsible developers..."
    - |
      error_found=false
      while IFS= read -r line; do
        file=$(echo $line | awk -F ':' '{print $1}')
        if [[ -n "$file" ]]; then
          # Get the last commit author for the file
          git_log=$(git log -n 1 --pretty=format:"%an <%ae>" -- $file)
          echo "File: $file - Last modified by: $git_log"
          if [[ $git_log == *"$GITLAB_USER_LOGIN"* ]]; then
            echo "Error caused by current user in file: $file"
            error_found=true
          fi
        fi
      done < filtered_report.txt

      if $error_found; then
        echo "Pipeline failed due to missing documentation issues in files modified by the current user."
        exit 1
      else
        echo "No relevant issues found in files modified by the current user. Passing pipeline."
      fi
  artifacts:
    paths:
      - .dart_tool/
      - analysis_report.txt
      - filtered_report.txt
    expire_in: 1h
  retry: 2

# Trigger Unit Test Pipeline On Success.
unit_tests:
  stage: trigger_unit_tests
  trigger:
    include: child-ci-unit-tests-pre-dev.yml
  rules:
    - when: on_success