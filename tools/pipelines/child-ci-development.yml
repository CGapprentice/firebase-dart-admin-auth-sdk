stages:
  - setup_main
  - setup_example
  - analyze

# Setup Main Project
setup_main:
  stage: setup_main
  image: dart:stable
  script:
    - echo "Setting up the main project..."
    - cd firebase-dart-admin-auth-sdk
    - dart pub get || echo "Error running dart pub get in main project. Continuing pipeline."
  artifacts:
    paths:
      - firebase-dart-admin-auth-sdk/.dart_tool/
    expire_in: 1h

# Setup Example Project
setup_example:
  stage: setup_example
  image: ghcr.io/cirruslabs/flutter:stable
  script:
    - echo "Setting up the example project..."
    - cd firebase-dart-admin-auth-sdk/example
    - flutter pub get || echo "Error running flutter pub get in example project. Continuing pipeline."
  dependencies:
    - setup_main
  artifacts:
    paths:
      - firebase-dart-admin-auth-sdk/example/.dart_tool/
    expire_in: 1h

# Analyze Stage
analyze:
  stage: analyze
  image: dart:stable
  script:
    - echo "Running Dart analysis for the entire project..."
    - cd firebase-dart-admin-auth-sdk/example
    - dart analyze > analysis_report.txt || echo "Analysis completed with warnings/errors. Check analysis_report.txt."

    # Filter analysis output
    - echo "Filtering for documentation issues, warnings, and errors excluding test/unit files..."
    - grep -E "(Missing documentation for a public member|info|warning|error)" analysis_report.txt | grep -vE "^test/unit" > filtered_report.txt || echo "No relevant issues found."

    # Check for responsible developers
    - echo "Checking for responsible developers..."
    - |
      while IFS= read -r line; do
        # Extract file path from the filtered report
        file=$(echo $line | awk -F ':' '{print $1}')
        if [[ -n "$file" ]]; then
          # Get the last commit hash for the file
          git_log=$(git log -n 1 --pretty=format:"%h" -- $file)
          echo "File: $file - Last modified in commit: $git_log"
          echo "Issue found: $line"
        else
          echo "No file information could be extracted from: $line"
        fi
      done < filtered_report.txt

    - echo "Analysis complete. Please address the warnings above if applicable."
  dependencies:
    - setup_example  # Ensure dependencies are installed before running analysis
  artifacts:
    paths:
      - firebase-dart-admin-auth-sdk/analysis_report.txt
      - firebase-dart-admin-auth-sdk/filtered_report.txt
    expire_in: 1h
  retry: 2
